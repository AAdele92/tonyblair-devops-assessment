name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: eu-west-2
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  EKS_CLUSTER_NAME: tonyblair-cluster
  K8S_NAMESPACE: monitoring
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG ./app

      - name: Push Docker image to ECR
        run: |
          docker push $ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy to EKS
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

      - name: Set image tag in deployment
        run: |
          sed -i "s|image: tonyblair/app:latest|image: $ECR_REPOSITORY:$IMAGE_TAG|g" K8s/deployment.yaml

      - name: Apply Namespace
        run: |
          kubectl apply -f K8s/namespace.yaml

      - name: Deploy Application
        run: |
          kubectl apply -f K8s/deployment.yaml
          kubectl apply -f K8s/service.yaml

      - name: Deploy Monitoring Stack (Prometheus & Grafana)
        run: |
          kubectl apply -f K8s/prometheus.yaml || true
          kubectl apply -f K8s/grafana.yaml || true

      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/tonyblair-app -n $K8S_NAMESPACE